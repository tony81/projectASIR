version: '2'

networks:
  network1:
    ipam:
      driver: default
      config:
        - subnet: 172.20.128.0/16
          gateway: 172.20.128.1

services:
   node1:
     image: nginx:latest
     expose:
        - "80"
     volumes:
        - ./code:/code
        - ./nginx-nodes/site1.conf:/etc/nginx/conf.d/site.conf
     links:
        - php
        - database
     networks:
       network1:
         ipv4_address: 172.20.128.2

   node2:
     image: nginx:latest
     expose:
        - "80"
     volumes:
        - ./code:/code
        - ./nginx-nodes/site2.conf:/etc/nginx/conf.d/site.conf
     links:
        - php
        - database
     networks:
       network1:
         ipv4_address: 172.20.128.3

   node3:
     image: nginx:latest
     expose:
        - "80"
     volumes:
        - ./code:/code
        - ./nginx-nodes/site3.conf:/etc/nginx/conf.d/site.conf
     links:
        - php
        - database
     networks:
       network1:
         ipv4_address: 172.20.128.4

   proxy:
     image: nginx:latest
     #command: bash -c "rm /etc/nginx/conf.d/default.conf && rm -r /etc/nginx/conf.d"
     volumes:
        - ./nginx-balancer/balancer.conf:/etc/nginx/nginx.conf
     links:
      - node1
      - node2
      - node3
     networks:
       network1:
         ipv4_address: 172.20.128.5
   php:
     build:
       context:  ./php
       dockerfile: Dockerfile
     #image: php:7-fpm
     volumes:
        - ./code:/code
     networks:
       network1:
         ipv4_address: 172.20.128.6

   database:
     image: mysql/mysql-server
     command: --default-authentication-plugin=mysql_native_password
     restart: always
     environment:
       MYSQL_ROOT_PASSWORD: mysql
     networks:
       network1:
         ipv4_address: 172.20.128.7

   adminer:
     image: adminer
     restart: always
     ports:
       - 8080:8080
     links:
       - database
     networks:
       network1:
         ipv4_address: 172.20.128.8


#   firewall:
#     image: biarca/iptables
#     cap_add:
#       - NET_ADMIN
#     command: iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 172.18.0.6:80 && iptables -t nat -A POSTROUTING -j MASQUERADE
